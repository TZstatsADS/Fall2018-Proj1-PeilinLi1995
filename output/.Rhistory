line = list(color = 'green',alpha=0.5),
name='Three+ sentence') %>%
align='center')
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence >= 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three+ sentence') %>%
align='center')
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence >= 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three+ sentence'),
align='center')
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three+ sentence'),
align='center')
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence > 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three sentence'),
align='center')
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence > 3,]$text_wordcount,
marker = list(color = 'orange',alpha=0.5),
line = list(color = 'orange',alpha=0.5),
name='Three+ sentence'),
align='center')
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three sentence') %>%
align='center')
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three sentence'),
align='center')
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three sentence'),
align='center')
setwd("c:/Users/24796/Documents/GitHub/Fall2018-Proj1-PeilinLi1995/output")
setwd("c:/Users/24796/Documents/GitHub/Fall2018-Proj1-PeilinLi1995/output")
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("scales")
library("RColorBrewer")
library("RANN")
library("plotly")
library("topicmodels")
library("beeswarm")
library("cluster")
library("tidytext")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
library("gcookbook")
# load HappyDB data
HappyDB <- read.csv("../data/processed_moments.csv", header = TRUE)
HappyDB$text_wordcount <- word_count(HappyDB$text)
#wordcount_1s <- (HappyDB[HappyDB$num_sentence == 1,])$text_wordcount
#wordcount_2s <- (HappyDB[HappyDB$num_sentence == 2,])$text_wordcount
#wordcount_3s <- (HappyDB[HappyDB$num_sentence >= 3,])$text_wordcount
library(shiny)
library(plotly)
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three+ sentence'),
align='center')
wordcount_1s <- (HappyDB[HappyDB$num_sentence == 1,])$text_wordcount
wordcount_2s <- (HappyDB[HappyDB$num_sentence == 2,])$text_wordcount
wordcount_3s <- (HappyDB[HappyDB$num_sentence == 3,])$text_wordcount
max(wordcount_3s)
max(wordcount_2s)
max(wordcount_1s)
# Interest Words of Trump
HappyDB.dtm<-filter(ff.dtm.all,document==doc.trump)
# Interest Words of Trump
dtm.trump=summarise(group_by(HappyDB$text,term),sum(count))
# Interest Words of Trump
dtm.trump=summarise(group_by(HappyDB$text),sum(count))
# Interest Words of Trump
dtm.trump=summarise(group_by(HappyDB$text),sum(count))
# Interest Words of Trump
dtm.trump=summarise(group_by(HappyDB, text()),sum(count))
# Interest Words of Trump
dtm.trump=summarise(group_by(HappyDB, text),sum(count))
# Interest Words of Trump
dtm.trump=summarise(group_by(HappyDB$text, term),sum(count))
# Interest Words of Trump
dtm.trump=summarise(group_by(HappyDB, text),sum(count))
# Interest Words of Trump
dtm.trump=summarise(group_by(HappyDB$text, text),sum(count))
# Interest Words of Trump
wordcloud(HappyDB$text, HappyDB$text_wordcount,
scale=c(3,0.2),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9, "Set1"))
install.packages("wordcloud2")
# Interest Words of Trump
wordcloud2(HappyDB$text,
scale=c(3,0.2),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9, "Set1"))
# Interest Words of Trump
library(wordcloud2)
wordcloud2(HappyDB$text,
scale=c(3,0.2),
max.words=100,
min.freq=1,
random.order=FALSE,
rot.per=0.3,
use.r.layout=T,
random.color=FALSE,
colors=brewer.pal(9, "Set1"))
# Interest Words of Trump
library(wordcloud2)
wordcloud2(HappyDB$text)
# Interest Words of Trump
library(wordcloud2)
getWordFreq(HappyDB$text)
unique(HappyDB$text)
# Interest Words of Trump
library(wordcloud2)
HappyDBtext.res <- HappyDB$text[(HappyDB$text)!=" "]
HappyDBtext.words <- unlist(lapply(X = HappyDBtext.res,FUN = segmentEN))
# Interest Words of Trump
library(wordcloud2)
HappyDBtext.res <- HappyDB$text[(HappyDB$text)!=" "]
HappyDBtext.words <- unlist(lapply(X = HappyDBtext.res,FUN = segmentS))
# Interest Words of Trump
library(wordcloud2)
HappyDBtext.res <- HappyDB$text[(HappyDB$text)!=" "]
HappyDBtext.words <- unlist(lapply(X = HappyDBtext.res,FUN = segment))
# Convert the text to lower case
HappyDB_word <- tm_map(HappyDB$text, content_transformer(tolower))
HappyDBtext<-Corpus(VectorSource(HappyDB$text))
HappyDB_word <- tm_map(HappyDBtext, content_transformer(tolower))
# Convert the text to lower case
HappyDBtext<-Corpus(VectorSource(HappyDB$text))
HappyDB_word <- tm_map(HappyDBtext, content_transformer(tolower))
# Remove numbers
HappyDB_word <- tm_map(HappyDB_word, removeNumbers)
# Remove english common stopwords
HappyDB_word <- tm_map(HappyDB_word, removeWords, stopwords("english"))
# Remove english common stopwords
HappyDB_word <- tm_map(HappyDB_word, removeWords, stopwords("english"))
# Remove your own stop word
# specify your stopwords as a character vector
HappyDB_word <- tm_map(HappyDB_word, removeWords, c("blabla1", "blabla2"))
# Remove punctuations
HappyDB_word <- tm_map(HappyDB_word, removePunctuation)
# Eliminate extra white spaces
HappyDB_word <- tm_map(HappyDB_word, stripWhitespace)
dtm <- TermDocumentMatrix(HappyDB_word)
m <- as.matrix(dtm)
v <- sort(rowSums(m),decreasing=TRUE)
m <- as.matrix(dtm)
# Convert the text to lower case
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
# set path for data file
setwd("/Users/24796/Documents/GitHub/Fall2018-Proj1-PeilinLi1995/output")
# load libraries
library("rvest")
library("tibble")
library("qdap")
library("sentimentr")
library("gplots")
library("dplyr")
library("tm")
library("syuzhet")
library("factoextra")
library("scales")
library("RColorBrewer")
library("RANN")
library("plotly")
library("topicmodels")
library("beeswarm")
library("cluster")
library("tidytext")
library("wordcloud")
library("RColorBrewer")
library("ggplot2")
library("gcookbook")
library('shiny')
## data loading and preprocessing
#folder.path="../data/InauguralSpeeches/"
# load HappyDB data
HappyDB <- read.csv("../data/processed_moments.csv", header = TRUE)
HappyDB$text_wordcount <- word_count(HappyDB$text)
div(plot_ly(type = "box") %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 1,]$text_wordcount,
marker = list(color = 'red',alpha=0.5),
line = list(color = 'red',alpha=0.5),
name='One sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 2,]$text_wordcount,
marker = list(color = 'blue',alpha=0.5),
line = list(color = 'blue',alpha=0.5),
name='Two sentence') %>%
add_boxplot(y=HappyDB[HappyDB$num_sentence == 3,]$text_wordcount,
marker = list(color = 'green',alpha=0.5),
line = list(color = 'green',alpha=0.5),
name='Three sentence'),
align='center')
# Convert the text to lower case
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean,max.words = 200,random.color = TRUE,random.order=FALSE)
# Interest Words of condeced text words
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean,min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.35,
colors=brewer.pal(8, "Dark2"))
# Interest Words of condeced text words
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(7, "Dark2"))
# Interest Words of condeced text words
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(9, "Dark2"))
# Interest Words of condeced text words
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Dark2"))
barplot(HappyDB$predicted_category, las = 2, names.arg = HappyDB$predicted_category,
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
barplot(HappyDB$predicted_category, las = 2,
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
barplot(table(HappyDB$predicted_category), las = 2,
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
barplot(table(HappyDB$predicted_category), las = 1,
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
barplot(table(HappyDB$predicted_category), las = 3,
col ="lightblue", main ="Most frequent words",
ylab = "Word frequencies")
barplot(table(HappyDB$predicted_category), las = 3,
col ="lightblue", main ="Category prediction comparison",
ylab = "Category frequencies")
# Interest Words of condeced text words
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Dark2"))
# Interest Words of condeced text words
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Dark2"), align='center')
# Interest Words of condeced text words
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Dark2"), align='center')
# Interest Words of condeced text words
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Dark2"), align='center')
# Interest Words of cleaned_hm
library(wordcloud)
HappyDBcleaned.Corpus <- Corpus(VectorSource(HappyDB$cleaned_hm))
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.Corpus, PlainTextDocument)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.Corpus,tolower)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removeNumbers)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removeWords,stopwords("english"))
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removePunctuation)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,stripWhitespace)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,stemDocument)
wordcloud(HappyDBcleaned.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Dark1"), align='center')
# Interest Words of cleaned_hm
library(wordcloud)
HappyDBcleaned.Corpus <- Corpus(VectorSource(HappyDB$cleaned_hm))
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.Corpus, PlainTextDocument)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.Corpus,tolower)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removeNumbers)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removeWords,stopwords("english"))
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removePunctuation)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,stripWhitespace)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,stemDocument)
wordcloud(HappyDBcleaned.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Dark3"), align='center')
# Interest Words of cleaned_hm
library(wordcloud)
HappyDBcleaned.Corpus <- Corpus(VectorSource(HappyDB$cleaned_hm))
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.Corpus, PlainTextDocument)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.Corpus,tolower)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removeNumbers)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removeWords,stopwords("english"))
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removePunctuation)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,stripWhitespace)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,stemDocument)
wordcloud(HappyDBcleaned.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Set1"), align='center')
# Interest Words of cleaned_hm
library(wordcloud)
HappyDBcleaned.Corpus <- Corpus(VectorSource(HappyDB$cleaned_hm))
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.Corpus, PlainTextDocument)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.Corpus,tolower)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removeNumbers)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removeWords,stopwords("english"))
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,removePunctuation)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,stripWhitespace)
HappyDBcleaned.clean <- tm_map(HappyDBcleaned.clean ,stemDocument)
wordcloud(HappyDBcleaned.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Set1"), align='center')
# Interest Words of condeced text
library(wordcloud)
HappyDBtext.Corpus <- Corpus(VectorSource(HappyDB$text))
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus, PlainTextDocument)
HappyDBtext.clean <- tm_map(HappyDBtext.Corpus,tolower)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeNumbers)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removeWords,stopwords("english"))
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,removePunctuation)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stripWhitespace)
HappyDBtext.clean <- tm_map(HappyDBtext.clean ,stemDocument)
wordcloud(HappyDBtext.clean, min.freq = 1,
max.words=100, random.order=FALSE, rot.per=0.4,
colors=brewer.pal(10, "Dark2"), align='center')
